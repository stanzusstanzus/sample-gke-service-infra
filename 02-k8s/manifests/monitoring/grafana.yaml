---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource
  labels:
    name: grafana-datasource
data:
  datasource.yml: |-
    apiVersion: 1
    datasources:
      - version: 1
        name: prometheus
        type: prometheus
        access: proxy
        isDefault: true
        url: http://prometheus-service.monitoring.svc.cluster.local:9090
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  labels:
    name: grafana-dashboards
data:
  dashboards.yml: |-
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards
      options:
        path: /usr/local/share/dashboards/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-storage
      - name: grafana-datasource
        configMap:
          defaultMode: 420
          name: grafana-datasource
      - name: grafana-dashboards
        configMap:
          defaultMode: 420
          name: grafana-dashboards
      securityContext:
          runAsUser: 0
          fsGroup: 0
      containers:
      - name: grafana
        image: gcr.io/${project_id}/grafana:0.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 200m
            memory: 768Mi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasource
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path:   /metrics
      prometheus.io/port:   '3000'
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
